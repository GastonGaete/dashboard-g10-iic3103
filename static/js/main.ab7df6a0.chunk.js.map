{"version":3,"sources":["store/reducer.ts","store/GlobalContext.ts","store/getGlobalContext.ts","views/HomeView.tsx","App.tsx","reportWebVitals.ts","services/Sentry.ts","services/i18n.ts","index.tsx"],"names":["initialState","attribute","reducer","state","action","type","createContext","context","baseUrl","GetGlobalContext","getStock","a","axios","request","method","url","then","response","data","catch","err","console","log","stock","getSpace","space","labels","colorsBar","colorsDonut","quantity","colors","datasets","label","backgroundColor","borderColor","HomeView","useContext","GlobalContext","useState","stocks","setStocks","storages","setStorages","titleGraph","storage","cocina","despacho","pulmon","recepcion","useEffect","res","className","map","sku","total","usedSpace","totalSpace","_id","App","useReducer","globalContext","getGlobalContext","Provider","value","exact","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","initSentry","initI18n","moment","locale","i18n","use","Backend","LanguageDetector","initReactI18next","init","fallbackLng","debug","detection","order","caches","interpolation","escapeValue","process","REACT_APP_ENV_NAME","REACT_APP_FIREBASE_API_KEY","REACT_APP_FIREBASE_PROJECT_ID","REACT_APP_FIREBASE_SENDER_ID","REACT_APP_FIREBASE_APP_ID","REACT_APP_FIREBASE_MEASUREMENT_ID","firebaseConfig","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","firebase","initializeApp","ReactDOM","render","StrictMode","fallback","document","getElementById"],"mappings":"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","file":"static/js/main.ab7df6a0.chunk.js","sourcesContent":["import { StateInterface, ReducerActionInterface } from '../interfaces';\n\nexport const initialState = {\n  attribute: '',\n};\n\nexport const reducer = (state: StateInterface, action: ReducerActionInterface): StateInterface => {\n  switch (action.type) {\n    default:\n      return state;\n  }\n};\n","import { createContext } from 'react';\nimport { initialState } from './reducer';\n\nexport default createContext({ state: initialState, context: null });\n","import axios from 'axios';\nimport { ContextInterface } from '../interfaces';\n\nconst baseUrl = 'http://napolitana10.ing.puc.cl';\n\nfunction GetGlobalContext(): ContextInterface {\n  const globalContext = {\n    getStock: async () => {\n      const stock = await axios.request({\n        method: 'GET',\n        url: `${baseUrl}/stocks/`,\n      })\n        .then(response => response.data)\n        .catch(err => {\n          console.log(err);\n          throw err;\n        });\n      return stock;\n    },\n    getSpace: async () => {\n      const space = await axios.request({\n        method: 'GET',\n        url: `${baseUrl}/almacenes/`,\n      })\n        .then(response => response.data)\n        .catch(err => {\n          console.log(err);\n          throw err;\n        });\n      return space;\n    },\n\n  };\n  return globalContext;\n}\n\nexport default GetGlobalContext;\n","import {\n  ReactElement,\n  useContext,\n  useEffect,\n  useState,\n} from 'react';\n\nimport { Doughnut, Bar } from 'react-chartjs-2';\n\nimport GlobalContext from '../store/GlobalContext';\n\nimport {\n  ContextInterface,\n  StockInterface,\n  StorageInterface,\n} from '../interfaces';\n\nimport '../styles/HomeViewStyles.scss';\n\nconst labels = [\n  'Usado',\n  'Libre',\n];\n\nconst colorsBar = ['rgb(0, 0, 255)'];\nconst colorsDonut = ['rgb(255, 0, 0)','rgb(0, 255, 0)']\n\nconst data = (labels: string[], quantity: number[], colors: string[]) => ({\n  labels,\n  datasets: [{\n    label: 'Cantidad',\n    backgroundColor: colors,\n    borderColor: colors,\n    data: quantity,\n  }]\n});\n\n\nfunction HomeView(): ReactElement {\n  const { context } : { context: ContextInterface } = useContext(GlobalContext);\n  const { getStock, getSpace } = context;\n\n  const [stocks, setStocks] = useState<StockInterface[]>([]);\n  const [storages, setStorages] = useState<StorageInterface[]>([]);\n\n  useEffect(() => {\n    getStock()\n      .then((res) => {\n        setStocks(res);\n      })\n      .catch(() => {});\n    getSpace()\n      .then((res) => {\n        setStorages(res);\n      })\n      .catch(() => {});\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  function titleGraph(storage: StorageInterface): string {\n    if (storage.cocina) return 'Cocina';\n    if (storage.despacho) return 'Despacho';\n    if (storage.pulmon) return 'Pulmon';\n    if (storage.recepcion) return 'Recepcion';\n    return 'General';\n  }\n\n  return (\n    <div className=\"home-view-container\">\n      <p className=\"title\">\n        Stock de productos\n      </p>\n      <div className=\"bar\">\n        <Bar data={data(stocks.map((stock) => stock.sku), stocks.map((stock) => stock.total), colorsBar)} />\n      </div>\n      <p className=\"title\">\n        Ocupaci√≥n de bodegas\n      </p>\n      <div className=\"donuts-container\">\n        {storages.map((storage) => (\n          <div\n            key={storage._id}\n            className=\"donut\"\n          >\n            <p className=\"label\">\n              {titleGraph(storage)}\n            </p>\n            <Doughnut data={data(labels, [storage.usedSpace, (storage.totalSpace - storage.usedSpace)], colorsDonut)} />\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n}\n\nexport default HomeView;\n","import { ReactElement, useReducer } from 'react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\n\nimport { initialState, reducer } from './store/reducer';\nimport GlobalContext from './store/GlobalContext';\nimport getGlobalContext from './store/getGlobalContext';\n\nimport HomeView from './views/HomeView';\n\nfunction App(): ReactElement {\n  // Context\n  const [state] = useReducer(reducer, initialState);\n  const globalContext = getGlobalContext();\n\n  return (\n    <GlobalContext.Provider value={{ state, context: globalContext }}>\n      <Router>\n        <Switch>\n          <Route exact path=\"/dashboard-g10-iic3103\">\n            <HomeView />\n          </Route>\n        </Switch>\n      </Router>\n    </GlobalContext.Provider>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler): void => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({\n      getCLS, getFID, getFCP, getLCP, getTTFB,\n    }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import * as Sentry from '@sentry/react';\nimport { Integrations } from '@sentry/tracing';\n\nexport function initSentry(): void {\n  Sentry.init({\n    dsn: 'https://examplePublicKey@o0.ingest.sentry.io/0',\n    integrations: [new Integrations.BrowserTracing()],\n\n    // We recommend adjusting this value in production, or using tracesSampler\n    // for finer control\n    tracesSampleRate: 1.0,\n    debug: process.env.REACT_APP_ENV_NAME !== 'production',\n    environment: process.env.REACT_APP_ENV_NAME,\n  });\n}\n\nexport default initSentry;\n","import i18n from 'i18next';\nimport { initReactI18next } from 'react-i18next';\nimport Backend from 'i18next-http-backend';\nimport LanguageDetector from 'i18next-browser-languagedetector';\nimport moment from 'moment';\nimport 'moment/locale/es';\n\nexport function initI18n(): void {\n  // Set moment language\n  moment.locale('es');\n\n  i18n\n    .use(Backend)\n    // detect user language\n    // learn more: https://github.com/i18next/i18next-browser-languageDetector\n    .use(LanguageDetector)\n    // pass the i18n instance to react-i18next.\n    .use(initReactI18next)\n    // init i18next\n    // for all options read: https://www.i18next.com/overview/configuration-options\n    .init({\n      fallbackLng: 'es_CL',\n      debug: true,\n      detection: {\n        order: ['queryString', 'cookie'],\n        caches: ['cookie'],\n      },\n      interpolation: {\n        escapeValue: false, // not needed for react as it escapes by default\n      },\n    });\n}\n\nexport default initI18n;\n","import React, { Suspense } from 'react';\nimport ReactDOM from 'react-dom';\n\n// Firebase App (the core Firebase SDK) is always required and must be listed first\nimport firebase from 'firebase/app';\nimport 'firebase/analytics';\n\nimport './styles/index.scss';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nimport { initI18n } from './services';\n\nconst {\n  REACT_APP_ENV_NAME,\n  REACT_APP_FIREBASE_API_KEY,\n  REACT_APP_FIREBASE_PROJECT_ID,\n  REACT_APP_FIREBASE_SENDER_ID,\n  REACT_APP_FIREBASE_APP_ID,\n  REACT_APP_FIREBASE_MEASUREMENT_ID,\n} = process.env;\n\nif (REACT_APP_ENV_NAME === 'production') {\n  const firebaseConfig = {\n    apiKey: REACT_APP_FIREBASE_API_KEY,\n    authDomain: `${REACT_APP_FIREBASE_PROJECT_ID}.firebaseapp.com`,\n    databaseURL: `https://${REACT_APP_FIREBASE_PROJECT_ID}.firebaseio.com`,\n    projectId: `${REACT_APP_FIREBASE_PROJECT_ID}`,\n    storageBucket: `${REACT_APP_FIREBASE_PROJECT_ID}.appspot.com`,\n    messagingSenderId: REACT_APP_FIREBASE_SENDER_ID,\n    appId: REACT_APP_FIREBASE_APP_ID,\n    measurementId: `G-${REACT_APP_FIREBASE_MEASUREMENT_ID}`,\n  };\n\n  firebase.initializeApp(firebaseConfig);\n}\n\ninitI18n();\n\nReactDOM.render(\n  <React.StrictMode>\n    <Suspense fallback=\"loading\">\n      <App />\n    </Suspense>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}